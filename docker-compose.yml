version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: on-failure

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - DATABASE_URL=postgresql://root:pass@db:5432/assistant?schema=public
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - XAI_API_KEY=${XAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - FIRECRAWL_API_URL=${FIRECRAWL_API_URL:-}
      - WEATHER_API_KEY=${WEATHER_API_KEY:-}
      - SERP_API_KEY=${SERP_API_KEY:-}
      - GITHUB_PAT=${GITHUB_PAT:-}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=assistant
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d assistant" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

volumes:
  postgres_data: